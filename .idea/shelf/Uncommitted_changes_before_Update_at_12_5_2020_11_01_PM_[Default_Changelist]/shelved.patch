Index: CS Project/src/SocialMedia/Tester.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package SocialMedia;\r\n\r\nimport java.lang.invoke.TypeDescriptor;\r\nimport java.lang.reflect.Field;\r\nimport java.lang.reflect.Modifier;\r\nimport java.util.ArrayList;\r\nimport java.io.*;\r\nimport java.net.Socket;\r\nimport java.util.List;\r\n\r\nimport SocialMedia.ServerAndClient.*;\r\nimport org.junit.Test;\r\nimport org.junit.Assert;\r\nimport static org.junit.Assert.assertEquals;\r\n\r\n/**\r\n * A JUnit tester class for all complicated methods that are not concurrency or GUI-based.\r\n *\r\n * @author Cole Busa\r\n * @version 12/5/20\r\n */\r\npublic class Tester {\r\n    /**\r\n     * A method to verify the server client thread class exists.\r\n     */\r\n    @Test\r\n    public void serverClientThreadExists() {\r\n        try {\r\n            Class.forName(\"SocialMedia.ServerAndClient.ServerClientThread\");\r\n        } catch (ClassNotFoundException e) {\r\n            Assert.fail(\"Need a ServerClientThread class\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * A method to verify the server client thread class extends the right classes.\r\n     */\r\n    @Test\r\n    public void serverClientThreadExtends() {\r\n        assertEquals(Thread.class, ServerClientThread.class.getSuperclass());\r\n    }\r\n\r\n    /**\r\n     * A method to verify the server client thread class has correctly formatted fields.\r\n     */\r\n    @Test\r\n    public void serverClientThreadFields() {\r\n        try {\r\n            assertEquals(String.class, ServerClientThread.class.getField(\"line\").getType());\r\n            assertEquals(true, Modifier.isPublic(ServerClientThread.class.getField(\"line\").getModifiers()));\r\n\r\n            assertEquals(BufferedReader.class, ServerClientThread.class.getField(\"bufferedReader\").getType());\r\n            assertEquals(true, Modifier.isPublic(ServerClientThread.class.getField(\"bufferedReader\").getModifiers()));\r\n\r\n            assertEquals(PrintWriter.class, ServerClientThread.class.getField(\"printWriter\").getType());\r\n            assertEquals(true, Modifier.isPublic(ServerClientThread.class.getField(\"printWriter\").getModifiers()));\r\n\r\n            assertEquals(Socket.class, ServerClientThread.class.getField(\"socket\").getType());\r\n            assertEquals(true, Modifier.isPublic(ServerClientThread.class.getField(\"socket\").getModifiers()));\r\n\r\n            assertEquals(ObjectOutputStream.class, ServerClientThread.class.getField(\"objectOutputStream\").getType());\r\n            assertEquals(true, Modifier.isPublic(ServerClientThread.class.getField(\"objectOutputStream\").getModifiers()));\r\n\r\n            assertEquals(ObjectInputStream.class, ServerClientThread.class.getField(\"objectInputStream\").getType());\r\n            assertEquals(true, Modifier.isPublic(ServerClientThread.class.getField(\"objectInputStream\").getModifiers()));\r\n\r\n            assertEquals(ServerObjectStorage.class, ServerClientThread.class.getField(\"serverObjectStorage\").getType());\r\n            assertEquals(true, Modifier.isPublic(ServerClientThread.class.getField(\"serverObjectStorage\").getModifiers()));\r\n\r\n            assertEquals(Profile.class, ServerClientThread.class.getField(\"profile\").getType());\r\n            assertEquals(true, Modifier.isPublic(ServerClientThread.class.getField(\"profile\").getModifiers()));\r\n        } catch (NoSuchFieldException e) {\r\n            Assert.fail(\"Missing fields\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * A method to verify the server client thread class has correctly formatted methods.\r\n     */\r\n    @Test\r\n    public void serverClientThreadMethods() {\r\n        try {\r\n            assertEquals(void.class, ServerClientThread.class.getMethod(\"StopThread\").getReturnType());\r\n            assertEquals(true, Modifier.isPublic(ServerClientThread.class.getMethod(\"StopThread\").getModifiers()));\r\n\r\n            assertEquals(void.class, ServerClientThread.class.getMethod(\"run\").getReturnType());\r\n            assertEquals(true, Modifier.isPublic(ServerClientThread.class.getMethod(\"run\").getModifiers()));\r\n        } catch (NoSuchMethodException e) {\r\n            Assert.fail(\"Missing methods\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * A method to verify the central server class exists.\r\n     */\r\n    @Test\r\n    public void centralServerExists() {\r\n        try {\r\n            Class.forName(\"SocialMedia.ServerAndClient.CentralServer\");\r\n        } catch (ClassNotFoundException e) {\r\n            Assert.fail(\"Need a CentralServer class\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * A method to verify the central server class extends the right classes.\r\n     */\r\n    @Test\r\n    public void centralServerExtends() {\r\n        assertEquals(Object.class, CentralServer.class.getSuperclass());\r\n    }\r\n\r\n    /**\r\n     * A method to verify the central server class has correctly formatted fields.\r\n     */\r\n    @Test\r\n    public void centralServerFields() {\r\n        try {\r\n            assertEquals(ServerObjectStorage.class, CentralServer.class.getField(\"serverObjectStorage\").getType());\r\n            assertEquals(true, Modifier.isPublic(CentralServer.class.getField(\"serverObjectStorage\").getModifiers()));\r\n            assertEquals(true, Modifier.isStatic(CentralServer.class.getField(\"serverObjectStorage\").getModifiers()));\r\n\r\n            assertEquals(int.class, CentralServer.class.getField(\"numberOfConnections\").getType());\r\n            assertEquals(true, Modifier.isPublic(CentralServer.class.getField(\"numberOfConnections\").getModifiers()));\r\n            assertEquals(true, Modifier.isStatic(CentralServer.class.getField(\"numberOfConnections\").getModifiers()));\r\n\r\n            assertEquals(ArrayList.class, CentralServer.class.getField(\"serverClientThreads\").getType());\r\n            assertEquals(true, Modifier.isPublic(CentralServer.class.getField(\"serverClientThreads\").getModifiers()));\r\n            assertEquals(true, Modifier.isStatic(CentralServer.class.getField(\"serverClientThreads\").getModifiers()));\r\n        } catch (NoSuchFieldException e) {\r\n            Assert.fail(\"Missing fields\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * A method to verify the central server class has correctly formatted methods.\r\n     */\r\n    @Test\r\n    public void centralServerMethods() {\r\n        try {\r\n            assertEquals(void.class, CentralServer.class.getMethod(\"getUsersFromDatabase\").getReturnType());\r\n            assertEquals(true, Modifier.isPublic(CentralServer.class.getMethod(\"getUsersFromDatabase\").getModifiers()));\r\n            assertEquals(true, Modifier.isStatic(CentralServer.class.getMethod(\"getUsersFromDatabase\").getModifiers()));\r\n\r\n            assertEquals(void.class, CentralServer.class.getMethod(\"main\", String[].class).getReturnType());\r\n            assertEquals(true, Modifier.isPublic(CentralServer.class.getMethod(\"main\", String[].class).getModifiers()));\r\n            assertEquals(true, Modifier.isStatic(CentralServer.class.getMethod(\"main\", String[].class).getModifiers()));\r\n        } catch (NoSuchMethodException e) {\r\n            Assert.fail(\"Missing methods\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * A method to verify the server object storage class exists.\r\n     */\r\n    @Test\r\n    public void serverObjectStorageExists() {\r\n        try {\r\n            Class.forName(\"SocialMedia.ServerAndClient.ServerObjectStorage\");\r\n        } catch (ClassNotFoundException e) {\r\n            Assert.fail(\"Need a ServerObjectStorage class\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * A method to verify the server object storage class extends the right classes.\r\n     */\r\n    @Test\r\n    public void serverObjectStorageExtends() {\r\n        assertEquals(Object.class, ServerObjectStorage.class.getSuperclass());\r\n    }\r\n\r\n    /**\r\n     * A method to verify the server object storage class has correctly formatted fields.\r\n     */\r\n    @Test\r\n    public void serverObjectStorageFields() {\r\n        try {\r\n            assertEquals(ArrayList.class, ServerObjectStorage.class.getField(\"users\").getType());\r\n            assertEquals(true, Modifier.isPublic(ServerObjectStorage.class.getField(\"users\").getModifiers()));\r\n            assertEquals(true, Modifier.isVolatile(ServerObjectStorage.class.getField(\"users\").getModifiers()));\r\n        } catch (NoSuchFieldException e) {\r\n            Assert.fail(\"Missing fields\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * A method to verify the settings and constants class exists.\r\n     */\r\n    @Test\r\n    public void settingsAndConstantsExists() {\r\n        try {\r\n            Class.forName(\"SocialMedia.ServerAndClient.SettingsAndConstants\");\r\n        } catch (ClassNotFoundException e) {\r\n            Assert.fail(\"Need a SettingsAndConstants class\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * A method to verify the settings and constants class extends the right classes.\r\n     */\r\n    @Test\r\n    public void settingsAndConstantsExtends() {\r\n        assertEquals(Object.class, SettingsAndConstants.class.getSuperclass());\r\n    }\r\n\r\n    /**\r\n     * A method to verify the settings and constants class has correctly formatted fields.\r\n     */\r\n    @Test\r\n    public void settingsAndConstantsFields() {\r\n        try {\r\n            assertEquals(int.class, SettingsAndConstants.class.getField(\"SERVER_PORT\").getType());\r\n            assertEquals(true, Modifier.isPublic(SettingsAndConstants.class.getField(\"SERVER_PORT\").getModifiers()));\r\n            assertEquals(true, Modifier.isStatic(SettingsAndConstants.class.getField(\"SERVER_PORT\").getModifiers()));\r\n            assertEquals(true, Modifier.isFinal(SettingsAndConstants.class.getField(\"SERVER_PORT\").getModifiers()));\r\n\r\n            assertEquals(String.class, SettingsAndConstants.class.getField(\"WELCOME_MESSAGE_SERVER\").getType());\r\n            assertEquals(true, Modifier.isPublic(SettingsAndConstants.class.getField(\"WELCOME_MESSAGE_SERVER\").getModifiers()));\r\n            assertEquals(true, Modifier.isStatic(SettingsAndConstants.class.getField(\"WELCOME_MESSAGE_SERVER\").getModifiers()));\r\n            assertEquals(true, Modifier.isFinal(SettingsAndConstants.class.getField(\"WELCOME_MESSAGE_SERVER\").getModifiers()));\r\n        } catch (NoSuchFieldException e) {\r\n            Assert.fail(\"Missing fields\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * A method to verify the user client class exists.\r\n     */\r\n    @Test\r\n    public void userClientExists() {\r\n        try {\r\n            Class.forName(\"SocialMedia.ServerAndClient.UserClient\");\r\n        } catch (ClassNotFoundException e) {\r\n            Assert.fail(\"Need a CentralServer class\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * A method to verify the user client class extends the right classes.\r\n     */\r\n    @Test\r\n    public void userClientExtends() {\r\n        assertEquals(Object.class, UserClient.class.getSuperclass());\r\n    }\r\n\r\n    /**\r\n     * A method to verify the user client class has correctly formatted methods.\r\n     */\r\n    @Test\r\n    public void userClientMethods() {\r\n        try {\r\n            assertEquals(void.class, UserClient.class.getMethod(\"main\", String[].class).getReturnType());\r\n            assertEquals(true, Modifier.isPublic(UserClient.class.getMethod(\"main\", String[].class).getModifiers()));\r\n            assertEquals(true, Modifier.isStatic(UserClient.class.getMethod(\"main\", String[].class).getModifiers()));\r\n        } catch (NoSuchMethodException e) {\r\n            Assert.fail(\"Missing methods\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * A method to verify the friends list class exists.\r\n     */\r\n    @Test\r\n    public void friendsListExists() {\r\n        try {\r\n            Class.forName(\"SocialMedia.FriendsList\");\r\n        } catch (ClassNotFoundException e) {\r\n            Assert.fail(\"Need a FriendsList class\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * A method to verify the friends list class extends the right classes.\r\n     */\r\n    @Test\r\n    public void friendsListExtends() {\r\n        assertEquals(Object.class, FriendsList.class.getSuperclass());\r\n    }\r\n\r\n    /**\r\n     * A method to verify the friends list class has correctly formatted fields.\r\n     */\r\n    @Test\r\n    public void friendsListFields() {\r\n        try {\r\n            assertEquals(ArrayList.class, FriendsList.class.getField(\"friends\").getType());\r\n            assertEquals(true, Modifier.isPublic(FriendsList.class.getField(\"friends\").getModifiers()));\r\n        } catch (NoSuchFieldException e) {\r\n            Assert.fail(\"Missing fields\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * A method to verify the friends list class has correctly formatted methods.\r\n     */\r\n    @Test\r\n    public void friendsListMethods() {\r\n        try {\r\n            assertEquals(ArrayList.class, FriendsList.class.getMethod(\"getFriends\").getReturnType());\r\n            assertEquals(true, Modifier.isPublic(FriendsList.class.getMethod(\"getFriends\").getModifiers()));\r\n\r\n            assertEquals(void.class, FriendsList.class.getMethod(\"addFriend\", Profile.class).getReturnType());\r\n            assertEquals(true, Modifier.isPublic(FriendsList.class.getMethod(\"addFriend\", Profile.class).getModifiers()));\r\n\r\n            assertEquals(int.class, FriendsList.class.getMethod(\"removeFriend\", String.class).getReturnType());\r\n            assertEquals(true, Modifier.isPublic(FriendsList.class.getMethod(\"removeFriend\", String.class).getModifiers()));\r\n\r\n            assertEquals(ArrayList.class, FriendsList.class.getMethod(\"mutualFriends\", FriendsList.class).getReturnType());\r\n            assertEquals(true, Modifier.isPublic(FriendsList.class.getMethod(\"mutualFriends\", FriendsList.class).getModifiers()));\r\n\r\n            assertEquals(String.class, FriendsList.class.getMethod(\"toString\").getReturnType());\r\n            assertEquals(true, Modifier.isPublic(FriendsList.class.getMethod(\"toString\").getModifiers()));\r\n        } catch (NoSuchMethodException e) {\r\n            Assert.fail(\"Missing methods\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * A method to verify the password encryption class exists.\r\n     */\r\n    @Test\r\n    public void passwordEncryptionExists() {\r\n        try {\r\n            Class.forName(\"SocialMedia.PasswordEncryption\");\r\n        } catch (ClassNotFoundException e) {\r\n            Assert.fail(\"Need a PasswordEncryption class\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * A method to verify the password encryption class extends the right classes.\r\n     */\r\n    @Test\r\n    public void passwordEncryptionExtends() {\r\n        assertEquals(Object.class, PasswordEncryption.class.getSuperclass());\r\n    }\r\n\r\n    /**\r\n     * A method to verify the password encryption class has correctly formatted methods.\r\n     */\r\n    @Test\r\n    public void passwordEncryptionMethods() {\r\n        try {\r\n            assertEquals(String.class, PasswordEncryption.class.getMethod(\"encode\", String.class, int.class).getReturnType());\r\n            assertEquals(true, Modifier.isPublic(PasswordEncryption.class.getMethod(\"encode\", String.class, int.class).getModifiers()));\r\n            assertEquals(true, Modifier.isStatic(PasswordEncryption.class.getMethod(\"encode\", String.class, int.class).getModifiers()));\r\n\r\n            assertEquals(String.class, PasswordEncryption.class.getMethod(\"decode\", String.class, int.class).getReturnType());\r\n            assertEquals(true, Modifier.isPublic(PasswordEncryption.class.getMethod(\"decode\", String.class, int.class).getModifiers()));\r\n            assertEquals(true, Modifier.isStatic(PasswordEncryption.class.getMethod(\"decode\", String.class, int.class).getModifiers()));\r\n        } catch (NoSuchMethodException e) {\r\n            Assert.fail(\"Missing methods\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * A method to verify the profile class exists.\r\n     */\r\n    @Test\r\n    public void profileExists() {\r\n        try {\r\n            Class.forName(\"SocialMedia.Profile\");\r\n        } catch (ClassNotFoundException e) {\r\n            Assert.fail(\"Need a Profile class\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * A method to verify the profile class extends the right classes.\r\n     */\r\n    @Test\r\n    public void profileExtends() {\r\n        assertEquals(Object.class, Profile.class.getSuperclass());\r\n    }\r\n\r\n    /**\r\n     * A method to verify the profile class has correctly formatted fields.\r\n     */\r\n    @Test\r\n    public void profileFields() {\r\n        try {\r\n            assertEquals(String.class, Profile.class.getField(\"name\").getType());\r\n            assertEquals(true, Modifier.isPublic(Profile.class.getField(\"name\").getModifiers()));\r\n\r\n            assertEquals(String.class, Profile.class.getField(\"email\").getType());\r\n            assertEquals(true, Modifier.isPublic(Profile.class.getField(\"email\").getModifiers()));\r\n\r\n            assertEquals(FriendsList.class, Profile.class.getField(\"friendsList\").getType());\r\n            assertEquals(true, Modifier.isPublic(Profile.class.getField(\"friendsList\").getModifiers()));\r\n\r\n            assertEquals(String.class, Profile.class.getField(\"website\").getType());\r\n            assertEquals(true, Modifier.isPublic(Profile.class.getField(\"website\").getModifiers()));\r\n\r\n            assertEquals(List.class, Profile.class.getField(\"interests\").getType());\r\n            assertEquals(true, Modifier.isPublic(Profile.class.getField(\"interests\").getModifiers()));\r\n\r\n            assertEquals(String.class, Profile.class.getField(\"aboutMe\").getType());\r\n            assertEquals(true, Modifier.isPublic(Profile.class.getField(\"aboutMe\").getModifiers()));\r\n\r\n            assertEquals(int.class, Profile.class.getField(\"age\").getType());\r\n            assertEquals(true, Modifier.isPublic(Profile.class.getField(\"age\").getModifiers()));\r\n            assertEquals(true, Modifier.isFinal(Profile.class.getField(\"age\").getModifiers()));\r\n\r\n            assertEquals(String.class, Profile.class.getField(\"rawPassword\").getType());\r\n            assertEquals(true, Modifier.isPublic(Profile.class.getField(\"rawPassword\").getModifiers()));\r\n\r\n            assertEquals(ArrayList.class, Profile.class.getField(\"profilesList\").getType());\r\n            assertEquals(true, Modifier.isPublic(Profile.class.getField(\"profilesList\").getModifiers()));\r\n            assertEquals(true, Modifier.isStatic(Profile.class.getField(\"profilesList\").getModifiers()));\r\n\r\n            assertEquals(String.class, Profile.class.getField(\"username\").getType());\r\n            assertEquals(true, Modifier.isPublic(Profile.class.getField(\"username\").getModifiers()));\r\n            assertEquals(true, Modifier.isFinal(Profile.class.getField(\"username\").getModifiers()));\r\n\r\n            assertEquals(String.class, Profile.class.getField(\"encryptedPassword\").getType());\r\n            assertEquals(true, Modifier.isPublic(Profile.class.getField(\"encryptedPassword\").getModifiers()));\r\n        } catch (NoSuchFieldException e) {\r\n            Assert.fail(\"Missing fields\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * A method to verify the profile class has correctly formatted methods.\r\n     */\r\n    @Test\r\n    public void profileMethods() {\r\n        try {\r\n            assertEquals(ArrayList.class, Profile.class.getMethod(\"getProfilesList\").getReturnType());\r\n            assertEquals(true, Modifier.isPublic(Profile.class.getMethod(\"getProfilesList\").getModifiers()));\r\n            assertEquals(true, Modifier.isStatic(Profile.class.getMethod(\"getProfilesList\").getModifiers()));\r\n\r\n            assertEquals(Profile.class, Profile.class.getMethod(\"getProfileWith\", String.class).getReturnType());\r\n            assertEquals(true, Modifier.isPublic(Profile.class.getMethod(\"getProfileWith\", String.class).getModifiers()));\r\n            assertEquals(true, Modifier.isStatic(Profile.class.getMethod(\"getProfileWith\", String.class).getModifiers()));\r\n\r\n            assertEquals(FriendsList.class, Profile.class.getMethod(\"getFriendsList\").getReturnType());\r\n            assertEquals(true, Modifier.isPublic(Profile.class.getMethod(\"getFriendsList\").getModifiers()));\r\n\r\n            assertEquals(int.class, Profile.class.getMethod(\"getAge\").getReturnType());\r\n            assertEquals(true, Modifier.isPublic(Profile.class.getMethod(\"getAge\").getModifiers()));\r\n\r\n            assertEquals(String.class, Profile.class.getMethod(\"getUsername\").getReturnType());\r\n            assertEquals(true, Modifier.isPublic(Profile.class.getMethod(\"getUsername\").getModifiers()));\r\n\r\n            assertEquals(String.class, Profile.class.getMethod(\"getName\").getReturnType());\r\n            assertEquals(true, Modifier.isPublic(Profile.class.getMethod(\"getName\").getModifiers()));\r\n\r\n            assertEquals(void.class, Profile.class.getMethod(\"setName\", String.class).getReturnType());\r\n            assertEquals(true, Modifier.isPublic(Profile.class.getMethod(\"setName\", String.class).getModifiers()));\r\n\r\n            assertEquals(String.class, Profile.class.getMethod(\"getEmail\").getReturnType());\r\n            assertEquals(true, Modifier.isPublic(Profile.class.getMethod(\"getEmail\").getModifiers()));\r\n\r\n            assertEquals(void.class, Profile.class.getMethod(\"setEmail\", String.class).getReturnType());\r\n            assertEquals(true, Modifier.isPublic(Profile.class.getMethod(\"setEmail\", String.class).getModifiers()));\r\n\r\n            assertEquals(String.class, Profile.class.getMethod(\"getWebsite\").getReturnType());\r\n            assertEquals(true, Modifier.isPublic(Profile.class.getMethod(\"getWebsite\").getModifiers()));\r\n\r\n            assertEquals(void.class, Profile.class.getMethod(\"setWebsite\", String.class).getReturnType());\r\n            assertEquals(true, Modifier.isPublic(Profile.class.getMethod(\"setWebsite\", String.class).getModifiers()));\r\n\r\n            assertEquals(List.class, Profile.class.getMethod(\"getInterests\").getReturnType());\r\n            assertEquals(true, Modifier.isPublic(Profile.class.getMethod(\"getInterests\").getModifiers()));\r\n\r\n            assertEquals(void.class, Profile.class.getMethod(\"setInterests\", List.class).getReturnType());\r\n            assertEquals(true, Modifier.isPublic(Profile.class.getMethod(\"setInterests\", List.class).getModifiers()));\r\n\r\n            assertEquals(String.class, Profile.class.getMethod(\"getAboutMe\").getReturnType());\r\n            assertEquals(true, Modifier.isPublic(Profile.class.getMethod(\"getAboutMe\").getModifiers()));\r\n\r\n            assertEquals(void.class, Profile.class.getMethod(\"setAboutMe\", String.class).getReturnType());\r\n            assertEquals(true, Modifier.isPublic(Profile.class.getMethod(\"setAboutMe\", String.class).getModifiers()));\r\n\r\n            assertEquals(String.class, Profile.class.getMethod(\"getEncryptedPassword\").getReturnType());\r\n            assertEquals(true, Modifier.isPublic(Profile.class.getMethod(\"getEncryptedPassword\").getModifiers()));\r\n\r\n            assertEquals(void.class, Profile.class.getMethod(\"setEncryptedPassword\", String.class).getReturnType());\r\n            assertEquals(true, Modifier.isPublic(Profile.class.getMethod(\"setEncryptedPassword\", String.class).getModifiers()));\r\n        } catch (NoSuchMethodException e) {\r\n            Assert.fail(\"Missing methods\");\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    /**\r\n     * A tester method for the entire profile class.\r\n     */\r\n    @Test\r\n    public void testProfileClass() {\r\n        //test password encryption\r\n        Profile testProfile = new Profile(\"Steve\", \"username\", 18, \"steve@purdue.edu\", \"Password\");\r\n        String correctPassword = \"Password\";\r\n        assertEquals(correctPassword, testProfile.getRawPassword());\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * A tester method for the entire friends list class.\r\n     */\r\n    @Test\r\n    public void testFriendsListClass() {\r\n        //test mutual friend method\r\n        ArrayList<Profile> friend1 = new ArrayList<Profile>();\r\n        ArrayList<Profile> friend2 = new ArrayList<Profile>();\r\n        Profile steve = new Profile(\"Steve\", \"username\", 18, \"steve@purdue.edu\", \"Password\");\r\n        Profile mike = new Profile(\"Mike\", \"michaelb\", 21, \"michaelb@purdue.edu\", \"Password123\");\r\n        Profile cam = new Profile(\"Cam\", \"cameron\", 19, \"cam@purdue.edu\", \"pass\");\r\n        Profile emily = new Profile(\"Emily\", \"emilyf\", 20, \"emilyf@purdue.edu\", \"notpassword\");\r\n        friend1.add(steve);\r\n        friend1.add(mike);\r\n        friend1.add(emily);\r\n        friend2.add(mike);\r\n        friend2.add(cam);\r\n        friend2.add(steve);\r\n        FriendsList f1 = new FriendsList(friend1);\r\n        FriendsList f2 = new FriendsList(friend2);\r\n        ArrayList<Profile> correctMutualFriends = new ArrayList<Profile>();\r\n        correctMutualFriends.add(steve);\r\n        correctMutualFriends.add(mike);\r\n        assertEquals(correctMutualFriends, f1.mutualFriends(f2));\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- CS Project/src/SocialMedia/Tester.java	(revision e46e82983819c59ff1bf0ce548b9e50cb3790df0)
+++ CS Project/src/SocialMedia/Tester.java	(date 1607214180794)
@@ -64,7 +64,7 @@
             assertEquals(ObjectInputStream.class, ServerClientThread.class.getField("objectInputStream").getType());
             assertEquals(true, Modifier.isPublic(ServerClientThread.class.getField("objectInputStream").getModifiers()));
 
-            assertEquals(ServerObjectStorage.class, ServerClientThread.class.getField("serverObjectStorage").getType());
+            assertEquals(ServerUserStorage.class, ServerClientThread.class.getField("serverObjectStorage").getType());
             assertEquals(true, Modifier.isPublic(ServerClientThread.class.getField("serverObjectStorage").getModifiers()));
 
             assertEquals(Profile.class, ServerClientThread.class.getField("profile").getType());
@@ -116,7 +116,7 @@
     @Test
     public void centralServerFields() {
         try {
-            assertEquals(ServerObjectStorage.class, CentralServer.class.getField("serverObjectStorage").getType());
+            assertEquals(ServerUserStorage.class, CentralServer.class.getField("serverObjectStorage").getType());
             assertEquals(true, Modifier.isPublic(CentralServer.class.getField("serverObjectStorage").getModifiers()));
             assertEquals(true, Modifier.isStatic(CentralServer.class.getField("serverObjectStorage").getModifiers()));
 
@@ -156,9 +156,9 @@
     @Test
     public void serverObjectStorageExists() {
         try {
-            Class.forName("SocialMedia.ServerAndClient.ServerObjectStorage");
+            Class.forName("SocialMedia.ServerAndClient.ServerUserStorage");
         } catch (ClassNotFoundException e) {
-            Assert.fail("Need a ServerObjectStorage class");
+            Assert.fail("Need a ServerUserStorage class");
         }
     }
 
@@ -167,7 +167,7 @@
      */
     @Test
     public void serverObjectStorageExtends() {
-        assertEquals(Object.class, ServerObjectStorage.class.getSuperclass());
+        assertEquals(Object.class, ServerUserStorage.class.getSuperclass());
     }
 
     /**
@@ -176,9 +176,9 @@
     @Test
     public void serverObjectStorageFields() {
         try {
-            assertEquals(ArrayList.class, ServerObjectStorage.class.getField("users").getType());
-            assertEquals(true, Modifier.isPublic(ServerObjectStorage.class.getField("users").getModifiers()));
-            assertEquals(true, Modifier.isVolatile(ServerObjectStorage.class.getField("users").getModifiers()));
+            assertEquals(ArrayList.class, ServerUserStorage.class.getField("users").getType());
+            assertEquals(true, Modifier.isPublic(ServerUserStorage.class.getField("users").getModifiers()));
+            assertEquals(true, Modifier.isVolatile(ServerUserStorage.class.getField("users").getModifiers()));
         } catch (NoSuchFieldException e) {
             Assert.fail("Missing fields");
         }
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"BranchesTreeState\">\r\n    <expand />\r\n    <select />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"270cdef1-b905-4db1-b60e-578e950f64f0\" name=\"Default Changelist\" comment=\"Updated tester to test the password encryption method. Also fixed the FriendsList mutualFriends method so that it now checks for common usernames.\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/misc.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/misc.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/CS Project/src/SocialMedia/GUIs/FriendsGUI.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/CS Project/src/SocialMedia/GUIs/FriendsGUI.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/CS Project/src/SocialMedia/Profile.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/CS Project/src/SocialMedia/Profile.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/CS Project/src/SocialMedia/ServerAndClient/ServerClientThread.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/CS Project/src/SocialMedia/ServerAndClient/ServerClientThread.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/CS Project/src/SocialMedia/Tester.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/CS Project/src/SocialMedia/Tester.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"ExportToHTMLSettings\">\r\n    <option name=\"OUTPUT_DIRECTORY\" value=\"$PROJECT_DIR$/../CS18000\\exportToHTML\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Enum\" />\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <favorite-branches>\r\n      <branch-storage>\r\n        <map>\r\n          <entry type=\"LOCAL\">\r\n            <value>\r\n              <list>\r\n                <branch-info repo=\"$PROJECT_DIR$\" source=\"testbranch\" />\r\n              </list>\r\n            </value>\r\n          </entry>\r\n        </map>\r\n      </branch-storage>\r\n    </favorite-branches>\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"master\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"JupyterTrust\" id=\"fe41e3a6-7fc2-4c5d-ad6a-39fb370f4803\" />\r\n  <component name=\"ProjectId\" id=\"1kcGV0R7adV96IvCAAmvpvYmlQo\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">\r\n    <property name=\"Downloaded.Files.Path.Enabled\" value=\"false\" />\r\n    <property name=\"Repository.Attach.Annotations\" value=\"false\" />\r\n    <property name=\"Repository.Attach.JavaDocs\" value=\"false\" />\r\n    <property name=\"Repository.Attach.Sources\" value=\"false\" />\r\n    <property name=\"RunOnceActivity.OpenProjectViewOnStart\" value=\"true\" />\r\n    <property name=\"SHARE_PROJECT_CONFIGURATION_FILES\" value=\"true\" />\r\n    <property name=\"restartRequiresConfirmation\" value=\"false\" />\r\n  </component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\Jaden\\IdeaProjects\\CS18000\\CS Project\\src\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\" selected=\"Application.TestRunner (1)\">\r\n    <configuration name=\"CentralServer\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"ServerAndClient.CentralServer\" />\r\n      <module name=\"CS18000\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"TestRunner (1)\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"SocialMedia.TestRunner\" />\r\n      <module name=\"CS18000\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"SocialMedia.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"TestRunner\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"TestRunner\" />\r\n      <module name=\"CS18000\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"UserClient (1)\" type=\"Application\" factoryName=\"Application\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"UserClient\" />\r\n      <module name=\"CS18000\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"UserClient (4)\" type=\"Application\" factoryName=\"Application\" editBeforeRun=\"true\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"UserClient\" />\r\n      <module name=\"CS18000\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"UserClient\" type=\"Application\" factoryName=\"Application\" singleton=\"false\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"ServerAndClient.UserClient\" />\r\n      <module name=\"CS18000\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"UserClient\" type=\"Application\" factoryName=\"Application\" editBeforeRun=\"true\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"ServerAndClient.UserClient\" />\r\n      <module name=\"CS18000\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"UserClient\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"ServerAndClient.UserClient\" />\r\n      <module name=\"CS18000\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"UserClient\" type=\"Application\" factoryName=\"Application\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"ServerAndClient.UserClient\" />\r\n      <module name=\"CS18000\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"UserClient\" type=\"Application\" factoryName=\"Application\" singleton=\"false\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"ServerAndClient.UserClient\" />\r\n      <module name=\"CS18000\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"UserInput\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"UserInput\" />\r\n      <module name=\"CS18000\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Application.TestRunner (1)\" />\r\n        <item itemvalue=\"Application.TestRunner\" />\r\n        <item itemvalue=\"Application.UserInput\" />\r\n        <item itemvalue=\"Application.CentralServer\" />\r\n        <item itemvalue=\"Application.UserClient\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"270cdef1-b905-4db1-b60e-578e950f64f0\" name=\"Default Changelist\" comment=\"Added:FriendsList class with add and remove friend methods. Not sure if the format for each friend in the list is what we want but it is easy to change\" />\r\n      <created>1606934243823</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1606934243823</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"Updated FriendsList class to store user profiles instead of user names.\">\r\n      <created>1606942311488</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1606942311488</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"2\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State>\r\n              <option name=\"FILTERS\">\r\n                <map>\r\n                  <entry key=\"branch\">\r\n                    <value>\r\n                      <list>\r\n                        <option value=\"origin/testbranch\" />\r\n                      </list>\r\n                    </value>\r\n                  </entry>\r\n                </map>\r\n              </option>\r\n            </State>\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n    <option name=\"oldMeFiltersMigrated\" value=\"true\" />\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"Test Branch\" />\r\n    <MESSAGE value=\"Added PasswordEncryption.java: It provides static classes to encode and decode strings, which is used to hide passwords.&#10;Changed Profile.java: Made the friends list initialize outside of the constructor, as it isn't required to be in the constructor. Also changed encryptedPassword in the constructor to save the password as an encrypted one (With a shift of 12).\" />\r\n    <MESSAGE value=\"Added: SettingsAndConstants.java&#10;Description: Holds constants that may be used elsewhere multiple times. Or just large strings.&#10;&#10;Added: ServerClientThread.java&#10;Description: Acts as the clients connection to the CentralServer. This is required for multiple connections to the CentralServer.&#10;&#10;Renamed: ProfileServer.class to CentralServer.java&#10;Description: As this is the central server used to run the whole platform, I feel like CentralServer would be a more understandable.&#10;&#10;Changed: UserClient.java&#10;Description: Recreated the simple client script but using the new ServerClientThread.java system.&#10;&#10;Added: ServerAndClient package&#10;Description: This is just so all of the client and server things are organized. We can do this to more of the files as we go on and if you need to use something from it, all you have to do is import the package at the top. (Intellij will do this/tell you automatically)\" />\r\n    <MESSAGE value=\"Added:FriendsList class with add and remove friend methods. Not sure if the format for each friend in the list is what we want but it is easy to change\" />\r\n    <MESSAGE value=\"Updated FriendsList class to store user profiles instead of user names.\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Updated FriendsList class to store user profiles instead of user names.\" />\r\n  </component>\r\n  <component name=\"WindowStateProjectService\">\r\n    <state x=\"2542\" y=\"-165\" key=\"#com.intellij.refactoring.rename.AutomaticRenamingDialog\" timestamp=\"1606092118870\">\r\n      <screen x=\"1920\" y=\"-165\" width=\"2048\" height=\"1120\" />\r\n    </state>\r\n    <state x=\"2542\" y=\"-165\" key=\"#com.intellij.refactoring.rename.AutomaticRenamingDialog/1920.-165.2048.1120/0.0.1920.1040@1920.-165.2048.1120\" timestamp=\"1606092118870\" />\r\n    <state width=\"1877\" height=\"282\" key=\"GridCell.Tab.0.bottom\" timestamp=\"1607204043251\">\r\n      <screen x=\"0\" y=\"0\" width=\"1920\" height=\"1040\" />\r\n    </state>\r\n    <state width=\"1877\" height=\"282\" key=\"GridCell.Tab.0.bottom/0.0.1920.1040@0.0.1920.1040\" timestamp=\"1607204043251\" />\r\n    <state width=\"2005\" height=\"305\" key=\"GridCell.Tab.0.bottom/1920.-165.2048.1120/0.0.1920.1040@1920.-165.2048.1120\" timestamp=\"1606095551161\" />\r\n    <state width=\"1877\" height=\"282\" key=\"GridCell.Tab.0.bottom/1920.-217.2048.1120/0.0.1920.1040@0.0.1920.1040\" timestamp=\"1605992528474\" />\r\n    <state width=\"2005\" height=\"305\" key=\"GridCell.Tab.0.bottom/1920.-217.2048.1120/0.0.1920.1040@1920.-217.2048.1120\" timestamp=\"1605995900196\" />\r\n    <state width=\"1877\" height=\"282\" key=\"GridCell.Tab.0.center\" timestamp=\"1607204043251\">\r\n      <screen x=\"0\" y=\"0\" width=\"1920\" height=\"1040\" />\r\n    </state>\r\n    <state width=\"1877\" height=\"282\" key=\"GridCell.Tab.0.center/0.0.1920.1040@0.0.1920.1040\" timestamp=\"1607204043251\" />\r\n    <state width=\"2005\" height=\"305\" key=\"GridCell.Tab.0.center/1920.-165.2048.1120/0.0.1920.1040@1920.-165.2048.1120\" timestamp=\"1606095551161\" />\r\n    <state width=\"1877\" height=\"282\" key=\"GridCell.Tab.0.center/1920.-217.2048.1120/0.0.1920.1040@0.0.1920.1040\" timestamp=\"1605992528474\" />\r\n    <state width=\"2005\" height=\"305\" key=\"GridCell.Tab.0.center/1920.-217.2048.1120/0.0.1920.1040@1920.-217.2048.1120\" timestamp=\"1605995900196\" />\r\n    <state width=\"1877\" height=\"282\" key=\"GridCell.Tab.0.left\" timestamp=\"1607204043250\">\r\n      <screen x=\"0\" y=\"0\" width=\"1920\" height=\"1040\" />\r\n    </state>\r\n    <state width=\"1877\" height=\"282\" key=\"GridCell.Tab.0.left/0.0.1920.1040@0.0.1920.1040\" timestamp=\"1607204043250\" />\r\n    <state width=\"2005\" height=\"305\" key=\"GridCell.Tab.0.left/1920.-165.2048.1120/0.0.1920.1040@1920.-165.2048.1120\" timestamp=\"1606095551161\" />\r\n    <state width=\"1877\" height=\"282\" key=\"GridCell.Tab.0.left/1920.-217.2048.1120/0.0.1920.1040@0.0.1920.1040\" timestamp=\"1605992528474\" />\r\n    <state width=\"2005\" height=\"305\" key=\"GridCell.Tab.0.left/1920.-217.2048.1120/0.0.1920.1040@1920.-217.2048.1120\" timestamp=\"1605995900195\" />\r\n    <state width=\"1877\" height=\"282\" key=\"GridCell.Tab.0.right\" timestamp=\"1607204043251\">\r\n      <screen x=\"0\" y=\"0\" width=\"1920\" height=\"1040\" />\r\n    </state>\r\n    <state width=\"1877\" height=\"282\" key=\"GridCell.Tab.0.right/0.0.1920.1040@0.0.1920.1040\" timestamp=\"1607204043251\" />\r\n    <state width=\"2005\" height=\"305\" key=\"GridCell.Tab.0.right/1920.-165.2048.1120/0.0.1920.1040@1920.-165.2048.1120\" timestamp=\"1606095551161\" />\r\n    <state width=\"1877\" height=\"282\" key=\"GridCell.Tab.0.right/1920.-217.2048.1120/0.0.1920.1040@0.0.1920.1040\" timestamp=\"1605992528474\" />\r\n    <state width=\"2005\" height=\"305\" key=\"GridCell.Tab.0.right/1920.-217.2048.1120/0.0.1920.1040@1920.-217.2048.1120\" timestamp=\"1605995900196\" />\r\n    <state width=\"2005\" height=\"375\" key=\"GridCell.Tab.1.bottom\" timestamp=\"1606091199150\">\r\n      <screen x=\"1920\" y=\"-165\" width=\"2048\" height=\"1120\" />\r\n    </state>\r\n    <state width=\"2005\" height=\"375\" key=\"GridCell.Tab.1.bottom/1920.-165.2048.1120/0.0.1920.1040@1920.-165.2048.1120\" timestamp=\"1606091199150\" />\r\n    <state width=\"2005\" height=\"375\" key=\"GridCell.Tab.1.center\" timestamp=\"1606091199150\">\r\n      <screen x=\"1920\" y=\"-165\" width=\"2048\" height=\"1120\" />\r\n    </state>\r\n    <state width=\"2005\" height=\"375\" key=\"GridCell.Tab.1.center/1920.-165.2048.1120/0.0.1920.1040@1920.-165.2048.1120\" timestamp=\"1606091199150\" />\r\n    <state width=\"2005\" height=\"375\" key=\"GridCell.Tab.1.left\" timestamp=\"1606091199150\">\r\n      <screen x=\"1920\" y=\"-165\" width=\"2048\" height=\"1120\" />\r\n    </state>\r\n    <state width=\"2005\" height=\"375\" key=\"GridCell.Tab.1.left/1920.-165.2048.1120/0.0.1920.1040@1920.-165.2048.1120\" timestamp=\"1606091199150\" />\r\n    <state width=\"2005\" height=\"375\" key=\"GridCell.Tab.1.right\" timestamp=\"1606091199150\">\r\n      <screen x=\"1920\" y=\"-165\" width=\"2048\" height=\"1120\" />\r\n    </state>\r\n    <state width=\"2005\" height=\"375\" key=\"GridCell.Tab.1.right/1920.-165.2048.1120/0.0.1920.1040@1920.-165.2048.1120\" timestamp=\"1606091199150\" />\r\n    <state x=\"552\" y=\"252\" key=\"Vcs.Push.Dialog.v2\" timestamp=\"1606942315582\">\r\n      <screen x=\"0\" y=\"0\" width=\"1920\" height=\"1040\" />\r\n    </state>\r\n    <state x=\"552\" y=\"252\" key=\"Vcs.Push.Dialog.v2/0.0.1920.1040@0.0.1920.1040\" timestamp=\"1606942315582\" />\r\n    <state x=\"2509\" y=\"106\" key=\"Vcs.Push.Dialog.v2/1920.-165.2048.1120/0.0.1920.1040@1920.-165.2048.1120\" timestamp=\"1606095578508\" />\r\n    <state x=\"552\" y=\"252\" key=\"Vcs.Push.Dialog.v2/1920.-217.2048.1120/0.0.1920.1040@0.0.1920.1040\" timestamp=\"1605992769069\" />\r\n    <state x=\"2509\" y=\"54\" key=\"Vcs.Push.Dialog.v2/1920.-217.2048.1120/0.0.1920.1040@1920.-217.2048.1120\" timestamp=\"1605993764260\" />\r\n    <state x=\"664\" y=\"411\" key=\"com.intellij.jarRepository.RepositoryAttachDialog-DOWNLOAD\" timestamp=\"1606934339677\">\r\n      <screen x=\"0\" y=\"0\" width=\"1920\" height=\"1040\" />\r\n    </state>\r\n    <state x=\"664\" y=\"411\" key=\"com.intellij.jarRepository.RepositoryAttachDialog-DOWNLOAD/0.0.1920.1040@0.0.1920.1040\" timestamp=\"1606934339677\" />\r\n    <state x=\"777\" y=\"433\" key=\"com.intellij.openapi.vcs.update.UpdateOrStatusOptionsDialogupdate-v2\" timestamp=\"1607211423334\">\r\n      <screen x=\"0\" y=\"0\" width=\"1920\" height=\"1040\" />\r\n    </state>\r\n    <state x=\"777\" y=\"433\" key=\"com.intellij.openapi.vcs.update.UpdateOrStatusOptionsDialogupdate-v2/0.0.1920.1040@0.0.1920.1040\" timestamp=\"1607211423334\" />\r\n    <state x=\"644\" y=\"226\" width=\"672\" height=\"630\" key=\"search.everywhere.popup\" timestamp=\"1607195821774\">\r\n      <screen x=\"0\" y=\"0\" width=\"1920\" height=\"1040\" />\r\n    </state>\r\n    <state x=\"644\" y=\"226\" width=\"672\" height=\"630\" key=\"search.everywhere.popup/0.0.1920.1040@0.0.1920.1040\" timestamp=\"1607195821774\" />\r\n    <state x=\"2607\" y=\"78\" width=\"672\" height=\"678\" key=\"search.everywhere.popup/1920.-165.2048.1120/0.0.1920.1040@1920.-165.2048.1120\" timestamp=\"1606095324743\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/workspace.xml	(revision e46e82983819c59ff1bf0ce548b9e50cb3790df0)
+++ .idea/workspace.xml	(date 1607227257037)
@@ -1,17 +1,35 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
   <component name="BranchesTreeState">
-    <expand />
-    <select />
+    <expand>
+      <path>
+        <item name="ROOT" type="e8cecc67:BranchNodeDescriptor" />
+        <item name="LOCAL_ROOT" type="e8cecc67:BranchNodeDescriptor" />
+      </path>
+      <path>
+        <item name="ROOT" type="e8cecc67:BranchNodeDescriptor" />
+        <item name="REMOTE_ROOT" type="e8cecc67:BranchNodeDescriptor" />
+      </path>
+      <path>
+        <item name="ROOT" type="e8cecc67:BranchNodeDescriptor" />
+        <item name="REMOTE_ROOT" type="e8cecc67:BranchNodeDescriptor" />
+        <item name="GROUP_NODE:origin" type="e8cecc67:BranchNodeDescriptor" />
+      </path>
+    </expand>
+    <select>
+      <path>
+        <item name="ROOT" type="e8cecc67:BranchNodeDescriptor" />
+        <item name="REMOTE_ROOT" type="e8cecc67:BranchNodeDescriptor" />
+        <item name="GROUP_NODE:origin" type="e8cecc67:BranchNodeDescriptor" />
+        <item name="BRANCH:origin/master" type="e8cecc67:BranchNodeDescriptor" />
+      </path>
+    </select>
   </component>
   <component name="ChangeListManager">
     <list default="true" id="270cdef1-b905-4db1-b60e-578e950f64f0" name="Default Changelist" comment="Updated tester to test the password encryption method. Also fixed the FriendsList mutualFriends method so that it now checks for common usernames.">
-      <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/CS Project/src/SocialMedia/GUIs/FriendsGUI.java" beforeDir="false" afterPath="$PROJECT_DIR$/CS Project/src/SocialMedia/GUIs/FriendsGUI.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/CS Project/src/SocialMedia/Profile.java" beforeDir="false" afterPath="$PROJECT_DIR$/CS Project/src/SocialMedia/Profile.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/CS Project/src/SocialMedia/ServerAndClient/ServerClientThread.java" beforeDir="false" afterPath="$PROJECT_DIR$/CS Project/src/SocialMedia/ServerAndClient/ServerClientThread.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/CS Project/src/SocialMedia/Tester.java" beforeDir="false" afterPath="$PROJECT_DIR$/CS Project/src/SocialMedia/Tester.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/CS18000.iml" beforeDir="false" afterPath="$PROJECT_DIR$/CS18000.iml" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -63,17 +81,27 @@
     <property name="Repository.Attach.Sources" value="false" />
     <property name="RunOnceActivity.OpenProjectViewOnStart" value="true" />
     <property name="SHARE_PROJECT_CONFIGURATION_FILES" value="true" />
+    <property name="project.structure.last.edited" value="Modules" />
+    <property name="project.structure.proportion" value="0.15" />
+    <property name="project.structure.side.proportion" value="0.2" />
     <property name="restartRequiresConfirmation" value="false" />
+    <property name="settings.editor.selected.configurable" value="reference.projectsettings.compiler.javacompiler" />
   </component>
   <component name="RecentsManager">
     <key name="MoveFile.RECENT_KEYS">
       <recent name="C:\Users\Jaden\IdeaProjects\CS18000\CS Project\src" />
     </key>
   </component>
-  <component name="RunManager" selected="Application.TestRunner (1)">
-    <configuration name="CentralServer" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
-      <option name="MAIN_CLASS_NAME" value="ServerAndClient.CentralServer" />
+  <component name="RunManager" selected="Application.UserInput (1)">
+    <configuration name="CentralServer (1)" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
+      <option name="MAIN_CLASS_NAME" value="SocialMedia.ServerAndClient.CentralServer" />
       <module name="CS18000" />
+      <extension name="coverage">
+        <pattern>
+          <option name="PATTERN" value="SocialMedia.ServerAndClient.*" />
+          <option name="ENABLED" value="true" />
+        </pattern>
+      </extension>
       <method v="2">
         <option name="Make" enabled="true" />
       </method>
@@ -105,44 +133,43 @@
         <option name="Make" enabled="true" />
       </method>
     </configuration>
-    <configuration name="UserClient (4)" type="Application" factoryName="Application" editBeforeRun="true" temporary="true" nameIsGenerated="true">
-      <option name="MAIN_CLASS_NAME" value="UserClient" />
-      <module name="CS18000" />
-      <method v="2">
-        <option name="Make" enabled="true" />
-      </method>
-    </configuration>
-    <configuration name="UserClient" type="Application" factoryName="Application" singleton="false" temporary="true" nameIsGenerated="true">
+    <configuration name="UserClient" type="Application" factoryName="Application" editBeforeRun="true" temporary="true" nameIsGenerated="true">
       <option name="MAIN_CLASS_NAME" value="ServerAndClient.UserClient" />
       <module name="CS18000" />
       <method v="2">
         <option name="Make" enabled="true" />
       </method>
     </configuration>
-    <configuration name="UserClient" type="Application" factoryName="Application" editBeforeRun="true" temporary="true" nameIsGenerated="true">
+    <configuration name="UserClient" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
       <option name="MAIN_CLASS_NAME" value="ServerAndClient.UserClient" />
       <module name="CS18000" />
       <method v="2">
         <option name="Make" enabled="true" />
       </method>
     </configuration>
-    <configuration name="UserClient" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
+    <configuration name="UserClient" type="Application" factoryName="Application" nameIsGenerated="true">
       <option name="MAIN_CLASS_NAME" value="ServerAndClient.UserClient" />
       <module name="CS18000" />
       <method v="2">
         <option name="Make" enabled="true" />
       </method>
     </configuration>
-    <configuration name="UserClient" type="Application" factoryName="Application" nameIsGenerated="true">
+    <configuration name="UserClient" type="Application" factoryName="Application" singleton="false" temporary="true" nameIsGenerated="true">
       <option name="MAIN_CLASS_NAME" value="ServerAndClient.UserClient" />
       <module name="CS18000" />
       <method v="2">
         <option name="Make" enabled="true" />
       </method>
     </configuration>
-    <configuration name="UserClient" type="Application" factoryName="Application" singleton="false" temporary="true" nameIsGenerated="true">
-      <option name="MAIN_CLASS_NAME" value="ServerAndClient.UserClient" />
+    <configuration name="UserInput (1)" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
+      <option name="MAIN_CLASS_NAME" value="SocialMedia.UserInput" />
       <module name="CS18000" />
+      <extension name="coverage">
+        <pattern>
+          <option name="PATTERN" value="SocialMedia.*" />
+          <option name="ENABLED" value="true" />
+        </pattern>
+      </extension>
       <method v="2">
         <option name="Make" enabled="true" />
       </method>
@@ -156,11 +183,11 @@
     </configuration>
     <recent_temporary>
       <list>
+        <item itemvalue="Application.UserInput (1)" />
+        <item itemvalue="Application.CentralServer (1)" />
         <item itemvalue="Application.TestRunner (1)" />
         <item itemvalue="Application.TestRunner" />
         <item itemvalue="Application.UserInput" />
-        <item itemvalue="Application.CentralServer" />
-        <item itemvalue="Application.UserClient" />
       </list>
     </recent_temporary>
   </component>
@@ -183,6 +210,9 @@
     <option name="localTasksCounter" value="2" />
     <servers />
   </component>
+  <component name="UnknownFeatures">
+    <option featureType="com.intellij.fileTypeFactory" implementationName="*.txt" />
+  </component>
   <component name="Vcs.Log.Tabs.Properties">
     <option name="TAB_STATES">
       <map>
@@ -213,37 +243,46 @@
     <MESSAGE value="Added: SettingsAndConstants.java&#10;Description: Holds constants that may be used elsewhere multiple times. Or just large strings.&#10;&#10;Added: ServerClientThread.java&#10;Description: Acts as the clients connection to the CentralServer. This is required for multiple connections to the CentralServer.&#10;&#10;Renamed: ProfileServer.class to CentralServer.java&#10;Description: As this is the central server used to run the whole platform, I feel like CentralServer would be a more understandable.&#10;&#10;Changed: UserClient.java&#10;Description: Recreated the simple client script but using the new ServerClientThread.java system.&#10;&#10;Added: ServerAndClient package&#10;Description: This is just so all of the client and server things are organized. We can do this to more of the files as we go on and if you need to use something from it, all you have to do is import the package at the top. (Intellij will do this/tell you automatically)" />
     <MESSAGE value="Added:FriendsList class with add and remove friend methods. Not sure if the format for each friend in the list is what we want but it is easy to change" />
     <MESSAGE value="Updated FriendsList class to store user profiles instead of user names." />
-    <option name="LAST_COMMIT_MESSAGE" value="Updated FriendsList class to store user profiles instead of user names." />
+    <MESSAGE value="Made profile serializable again" />
+    <option name="LAST_COMMIT_MESSAGE" value="Made profile serializable again" />
   </component>
   <component name="WindowStateProjectService">
     <state x="2542" y="-165" key="#com.intellij.refactoring.rename.AutomaticRenamingDialog" timestamp="1606092118870">
       <screen x="1920" y="-165" width="2048" height="1120" />
     </state>
     <state x="2542" y="-165" key="#com.intellij.refactoring.rename.AutomaticRenamingDialog/1920.-165.2048.1120/0.0.1920.1040@1920.-165.2048.1120" timestamp="1606092118870" />
-    <state width="1877" height="282" key="GridCell.Tab.0.bottom" timestamp="1607204043251">
+    <state x="184" y="85" key="DiffContextDialog" timestamp="1607227194502">
       <screen x="0" y="0" width="1920" height="1040" />
     </state>
+    <state x="184" y="85" key="DiffContextDialog/0.0.1920.1040/1920.-165.2048.1112@0.0.1920.1040" timestamp="1607227194502" />
+    <state width="1877" height="222" key="GridCell.Tab.0.bottom" timestamp="1607227149546">
+      <screen x="0" y="0" width="1920" height="1040" />
+    </state>
+    <state width="1877" height="222" key="GridCell.Tab.0.bottom/0.0.1920.1040/1920.-165.2048.1112@0.0.1920.1040" timestamp="1607227149546" />
     <state width="1877" height="282" key="GridCell.Tab.0.bottom/0.0.1920.1040@0.0.1920.1040" timestamp="1607204043251" />
     <state width="2005" height="305" key="GridCell.Tab.0.bottom/1920.-165.2048.1120/0.0.1920.1040@1920.-165.2048.1120" timestamp="1606095551161" />
     <state width="1877" height="282" key="GridCell.Tab.0.bottom/1920.-217.2048.1120/0.0.1920.1040@0.0.1920.1040" timestamp="1605992528474" />
     <state width="2005" height="305" key="GridCell.Tab.0.bottom/1920.-217.2048.1120/0.0.1920.1040@1920.-217.2048.1120" timestamp="1605995900196" />
-    <state width="1877" height="282" key="GridCell.Tab.0.center" timestamp="1607204043251">
+    <state width="1877" height="222" key="GridCell.Tab.0.center" timestamp="1607227149546">
       <screen x="0" y="0" width="1920" height="1040" />
     </state>
+    <state width="1877" height="222" key="GridCell.Tab.0.center/0.0.1920.1040/1920.-165.2048.1112@0.0.1920.1040" timestamp="1607227149546" />
     <state width="1877" height="282" key="GridCell.Tab.0.center/0.0.1920.1040@0.0.1920.1040" timestamp="1607204043251" />
     <state width="2005" height="305" key="GridCell.Tab.0.center/1920.-165.2048.1120/0.0.1920.1040@1920.-165.2048.1120" timestamp="1606095551161" />
     <state width="1877" height="282" key="GridCell.Tab.0.center/1920.-217.2048.1120/0.0.1920.1040@0.0.1920.1040" timestamp="1605992528474" />
     <state width="2005" height="305" key="GridCell.Tab.0.center/1920.-217.2048.1120/0.0.1920.1040@1920.-217.2048.1120" timestamp="1605995900196" />
-    <state width="1877" height="282" key="GridCell.Tab.0.left" timestamp="1607204043250">
+    <state width="1877" height="222" key="GridCell.Tab.0.left" timestamp="1607227149545">
       <screen x="0" y="0" width="1920" height="1040" />
     </state>
+    <state width="1877" height="222" key="GridCell.Tab.0.left/0.0.1920.1040/1920.-165.2048.1112@0.0.1920.1040" timestamp="1607227149545" />
     <state width="1877" height="282" key="GridCell.Tab.0.left/0.0.1920.1040@0.0.1920.1040" timestamp="1607204043250" />
     <state width="2005" height="305" key="GridCell.Tab.0.left/1920.-165.2048.1120/0.0.1920.1040@1920.-165.2048.1120" timestamp="1606095551161" />
     <state width="1877" height="282" key="GridCell.Tab.0.left/1920.-217.2048.1120/0.0.1920.1040@0.0.1920.1040" timestamp="1605992528474" />
     <state width="2005" height="305" key="GridCell.Tab.0.left/1920.-217.2048.1120/0.0.1920.1040@1920.-217.2048.1120" timestamp="1605995900195" />
-    <state width="1877" height="282" key="GridCell.Tab.0.right" timestamp="1607204043251">
+    <state width="1877" height="222" key="GridCell.Tab.0.right" timestamp="1607227149546">
       <screen x="0" y="0" width="1920" height="1040" />
     </state>
+    <state width="1877" height="222" key="GridCell.Tab.0.right/0.0.1920.1040/1920.-165.2048.1112@0.0.1920.1040" timestamp="1607227149546" />
     <state width="1877" height="282" key="GridCell.Tab.0.right/0.0.1920.1040@0.0.1920.1040" timestamp="1607204043251" />
     <state width="2005" height="305" key="GridCell.Tab.0.right/1920.-165.2048.1120/0.0.1920.1040@1920.-165.2048.1120" timestamp="1606095551161" />
     <state width="1877" height="282" key="GridCell.Tab.0.right/1920.-217.2048.1120/0.0.1920.1040@0.0.1920.1040" timestamp="1605992528474" />
@@ -264,6 +303,14 @@
       <screen x="1920" y="-165" width="2048" height="1120" />
     </state>
     <state width="2005" height="375" key="GridCell.Tab.1.right/1920.-165.2048.1120/0.0.1920.1040@1920.-165.2048.1120" timestamp="1606091199150" />
+    <state x="749" y="222" key="RollbackChangesDialog" timestamp="1607227209093">
+      <screen x="0" y="0" width="1920" height="1040" />
+    </state>
+    <state x="749" y="222" key="RollbackChangesDialog/0.0.1920.1040/1920.-165.2048.1112@0.0.1920.1040" timestamp="1607227209093" />
+    <state x="461" y="164" key="SettingsEditor" timestamp="1607213985795">
+      <screen x="0" y="0" width="1920" height="1040" />
+    </state>
+    <state x="461" y="164" key="SettingsEditor/0.0.1920.1040/1920.-165.2048.1112@0.0.1920.1040" timestamp="1607213985795" />
     <state x="552" y="252" key="Vcs.Push.Dialog.v2" timestamp="1606942315582">
       <screen x="0" y="0" width="1920" height="1040" />
     </state>
@@ -279,6 +326,14 @@
       <screen x="0" y="0" width="1920" height="1040" />
     </state>
     <state x="777" y="433" key="com.intellij.openapi.vcs.update.UpdateOrStatusOptionsDialogupdate-v2/0.0.1920.1040@0.0.1920.1040" timestamp="1607211423334" />
+    <state x="-7" y="0" width="1454" height="951" key="dock-window-1" timestamp="1607227257030">
+      <screen x="0" y="0" width="1920" height="1040" />
+    </state>
+    <state x="-7" y="0" width="1454" height="951" key="dock-window-1/0.0.1920.1040/1920.-165.2048.1112@0.0.1920.1040" timestamp="1607227257030" />
+    <state x="748" y="232" key="git4idea.branch.GitSmartOperationDialog" timestamp="1607227210305">
+      <screen x="0" y="0" width="1920" height="1040" />
+    </state>
+    <state x="748" y="232" key="git4idea.branch.GitSmartOperationDialog/0.0.1920.1040/1920.-165.2048.1112@0.0.1920.1040" timestamp="1607227210305" />
     <state x="644" y="226" width="672" height="630" key="search.everywhere.popup" timestamp="1607195821774">
       <screen x="0" y="0" width="1920" height="1040" />
     </state>
Index: CS18000.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<module type=\"JAVA_MODULE\" version=\"4\">\r\n  <component name=\"NewModuleRootManager\" inherit-compiler-output=\"true\">\r\n    <exclude-output />\r\n    <content url=\"file://$MODULE_DIR$\">\r\n      <sourceFolder url=\"file://$MODULE_DIR$/CS Project/src\" isTestSource=\"false\" />\r\n    </content>\r\n    <orderEntry type=\"inheritedJdk\" />\r\n    <orderEntry type=\"sourceFolder\" forTests=\"false\" />\r\n    <orderEntry type=\"module-library\">\r\n      <library name=\"JUnit4\">\r\n        <CLASSES>\r\n          <root url=\"jar://$MAVEN_REPOSITORY$/junit/junit/4.12/junit-4.12.jar!/\" />\r\n          <root url=\"jar://$MAVEN_REPOSITORY$/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar!/\" />\r\n        </CLASSES>\r\n        <JAVADOC />\r\n        <SOURCES />\r\n      </library>\r\n    </orderEntry>\r\n    <orderEntry type=\"module-library\">\r\n      <library name=\"JUnit5.4\">\r\n        <CLASSES>\r\n          <root url=\"jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter/5.4.2/junit-jupiter-5.4.2.jar!/\" />\r\n          <root url=\"jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter-api/5.4.2/junit-jupiter-api-5.4.2.jar!/\" />\r\n          <root url=\"jar://$MAVEN_REPOSITORY$/org/apiguardian/apiguardian-api/1.0.0/apiguardian-api-1.0.0.jar!/\" />\r\n          <root url=\"jar://$MAVEN_REPOSITORY$/org/opentest4j/opentest4j/1.1.1/opentest4j-1.1.1.jar!/\" />\r\n          <root url=\"jar://$MAVEN_REPOSITORY$/org/junit/platform/junit-platform-commons/1.4.2/junit-platform-commons-1.4.2.jar!/\" />\r\n          <root url=\"jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter-params/5.4.2/junit-jupiter-params-5.4.2.jar!/\" />\r\n          <root url=\"jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter-engine/5.4.2/junit-jupiter-engine-5.4.2.jar!/\" />\r\n          <root url=\"jar://$MAVEN_REPOSITORY$/org/junit/platform/junit-platform-engine/1.4.2/junit-platform-engine-1.4.2.jar!/\" />\r\n        </CLASSES>\r\n        <JAVADOC />\r\n        <SOURCES />\r\n      </library>\r\n    </orderEntry>\r\n  </component>\r\n</module>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- CS18000.iml	(revision e46e82983819c59ff1bf0ce548b9e50cb3790df0)
+++ CS18000.iml	(date 1607213986142)
@@ -1,11 +1,11 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <module type="JAVA_MODULE" version="4">
-  <component name="NewModuleRootManager" inherit-compiler-output="true">
+  <component name="NewModuleRootManager" LANGUAGE_LEVEL="JDK_14" inherit-compiler-output="true">
     <exclude-output />
     <content url="file://$MODULE_DIR$">
       <sourceFolder url="file://$MODULE_DIR$/CS Project/src" isTestSource="false" />
     </content>
-    <orderEntry type="inheritedJdk" />
+    <orderEntry type="jdk" jdkName="14" jdkType="JavaSDK" />
     <orderEntry type="sourceFolder" forTests="false" />
     <orderEntry type="module-library">
       <library name="JUnit4">
